{"ast":null,"code":"var _jsxFileName = \"/home/manu/Master/SCF/Proyecto/dashboard/src/components/Stats.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport mqtt from 'mqtt';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\nimport StationSelector from './StationSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  A1: 'red',\n  A2: 'blue',\n  A3: 'green',\n  A4: 'orange',\n  A5: 'purple',\n  A6: 'brown'\n};\nconst CONNECTION_NAMES = {\n  A1: 'Punta del Parque',\n  A2: 'Perpetuo Socorro',\n  A3: 'Fuente de las ranas',\n  A4: 'Hospital General',\n  A5: 'Universidad',\n  A6: 'Imaginalia'\n};\nconst initialState = Object.keys(CONNECTION_NAMES).reduce((acc, key) => {\n  acc[key] = Array(10).fill({\n    x: new Date().getTime(),\n    y: 0\n  });\n  return acc;\n}, {});\nexport default function Stats() {\n  _s();\n  const [pm10Data, setPm10Data] = useState(initialState);\n  const [pm25Data, setPm25Data] = useState(initialState);\n  const [humidityData, setHumidityData] = useState(initialState);\n  const [windData, setWindData] = useState(initialState);\n  const [selectedStations, setSelectedStations] = useState([]);\n  useEffect(() => {\n    const client = mqtt.connect('ws://54.78.231.141:9001');\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker.');\n      client.subscribe('pm10topic');\n      client.subscribe('pm25topic');\n      client.subscribe('humiditytopic');\n      client.subscribe('windtopic');\n    });\n    client.on('message', (topic, message) => {\n      const parsedMessage = JSON.parse(message.toString());\n      const timestamp = parsedMessage.timestamp < 1e12 ? parsedMessage.timestamp * 1000 : parsedMessage.timestamp;\n      const newPoint = {\n        x: timestamp,\n        y: parsedMessage.value\n      };\n      const connection = parsedMessage.station;\n      if (CONNECTION_NAMES[connection]) {\n        switch (topic) {\n          case 'pm10topic':\n            updateData(setPm10Data, connection, newPoint);\n            break;\n          case 'humiditytopic':\n            updateData(setHumidityData, connection, newPoint);\n            break;\n          default:\n            break;\n        }\n      } else {\n        console.warn(`Unknown connection: ${connection}`);\n      }\n    });\n    return () => {\n      client.end();\n    };\n  }, []);\n  const updateData = (setData, connection, newPoint) => {\n    setData(prevData => {\n      const updatedConnectionData = [...(prevData[connection] || []), newPoint].slice(-10);\n      return {\n        ...prevData,\n        [connection]: updatedConnectionData\n      };\n    });\n  };\n  const handleStationChange = event => {\n    const value = event.target.value;\n    if (event.target.checked) {\n      setSelectedStations(prevSelected => [...prevSelected, value]);\n    } else {\n      setSelectedStations(prevSelected => prevSelected.filter(station => station !== value));\n    }\n  };\n  const createDataset = (connection, data) => ({\n    label: CONNECTION_NAMES[connection],\n    data,\n    fill: false,\n    borderColor: COLORS[connection],\n    backgroundColor: COLORS[connection]\n  });\n  const createChartData = data => ({\n    labels: [],\n    datasets: selectedStations.map(connection => createDataset(connection, data[connection]))\n  });\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'minute',\n          stepSize: 1\n        },\n        title: {\n          display: true,\n          text: 'Date of the measurement'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Detected value'\n        }\n      }\n    }\n  };\n  const stationOptions = Object.keys(CONNECTION_NAMES).map(station => ({\n    value: station,\n    label: CONNECTION_NAMES[station]\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(StationSelector, {\n      options: stationOptions,\n      selectedOptions: selectedStations,\n      onChange: handleStationChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChartData(pm10Data),\n          options: {\n            ...chartOptions,\n            plugins: {\n              title: {\n                display: true,\n                text: 'PM10 Concentration'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChartData(pm25Data),\n          options: {\n            ...chartOptions,\n            plugins: {\n              title: {\n                display: true,\n                text: 'PM2.5 Concentration'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChartData(humidityData),\n          options: {\n            ...chartOptions,\n            plugins: {\n              title: {\n                display: true,\n                text: 'Humidity'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChartData(windData),\n          options: {\n            ...chartOptions,\n            plugins: {\n              title: {\n                display: true,\n                text: 'Wind Speed'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 138,\n    columnNumber: 5\n  }, this);\n}\n_s(Stats, \"EtP3El1iCiwDm//ZoHsHRdaUrvE=\");\n_c = Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","useEffect","useState","mqtt","Line","StationSelector","jsxDEV","_jsxDEV","COLORS","A1","A2","A3","A4","A5","A6","CONNECTION_NAMES","initialState","Object","keys","reduce","acc","key","Array","fill","x","Date","getTime","y","Stats","_s","pm10Data","setPm10Data","pm25Data","setPm25Data","humidityData","setHumidityData","windData","setWindData","selectedStations","setSelectedStations","client","connect","on","console","log","subscribe","topic","message","parsedMessage","JSON","parse","toString","timestamp","newPoint","value","connection","station","updateData","warn","end","setData","prevData","updatedConnectionData","slice","handleStationChange","event","target","checked","prevSelected","filter","createDataset","data","label","borderColor","backgroundColor","createChartData","labels","datasets","map","chartOptions","responsive","scales","type","time","unit","stepSize","title","display","text","stationOptions","className","children","options","selectedOptions","onChange","fileName","_jsxFileName","lineNumber","columnNumber","plugins","_c","$RefreshReg$"],"sources":["/home/manu/Master/SCF/Proyecto/dashboard/src/components/Stats.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport mqtt from 'mqtt';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\nimport StationSelector from './StationSelector'; \n\nconst COLORS = {\n  A1: 'red',\n  A2: 'blue',\n  A3: 'green',\n  A4: 'orange',\n  A5: 'purple',\n  A6: 'brown',\n};\n\nconst CONNECTION_NAMES = {\n  A1: 'Punta del Parque',\n  A2: 'Perpetuo Socorro',\n  A3: 'Fuente de las ranas',\n  A4: 'Hospital General',\n  A5: 'Universidad',\n  A6: 'Imaginalia',\n};\n\nconst initialState = Object.keys(CONNECTION_NAMES).reduce((acc, key) => {\n  acc[key] = Array(10).fill({ x: new Date().getTime(), y: 0 });\n  return acc;\n}, {});\n\nexport default function Stats() {\n  const [pm10Data, setPm10Data] = useState(initialState);\n  const [pm25Data, setPm25Data] = useState(initialState);\n  const [humidityData, setHumidityData] = useState(initialState);\n  const [windData, setWindData] = useState(initialState);\n  const [selectedStations, setSelectedStations] = useState([]);\n\n\n  useEffect(() => {\n\n    const client = mqtt.connect('ws://54.78.231.141:9001');\n\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker.');\n      client.subscribe('pm10topic');\n      client.subscribe('pm25topic');\n      client.subscribe('humiditytopic');\n      client.subscribe('windtopic');\n    });\n\n    client.on('message', (topic, message) => {\n      const parsedMessage = JSON.parse(message.toString());\n      const timestamp = parsedMessage.timestamp < 1e12 ? parsedMessage.timestamp * 1000 : parsedMessage.timestamp;\n      const newPoint = { x: timestamp, y: parsedMessage.value };\n      const connection = parsedMessage.station;\n\n      if (CONNECTION_NAMES[connection]) {\n        switch (topic) {\n          case 'pm10topic':\n            updateData(setPm10Data, connection, newPoint);\n            break;\n          case 'humiditytopic':\n            updateData(setHumidityData, connection, newPoint);\n            break;\n         \n          default:\n            break;\n        }\n      } else {\n        console.warn(`Unknown connection: ${connection}`);\n      }\n    });\n\n    return () => {\n      client.end();\n    };\n  }, []);\n\n  const updateData = (setData, connection, newPoint) => {\n    setData(prevData => {\n      const updatedConnectionData = [...(prevData[connection] || []), newPoint].slice(-10);\n      return { ...prevData, [connection]: updatedConnectionData };\n    });\n  };\n\n\n  const handleStationChange = (event) => {\n    const value = event.target.value;\n    if (event.target.checked) {\n      setSelectedStations((prevSelected) => [...prevSelected, value]);\n    } else {\n      setSelectedStations((prevSelected) => prevSelected.filter((station) => station !== value));\n    }\n  };\n\n  const createDataset = (connection, data) => ({\n    label: CONNECTION_NAMES[connection],\n    data,\n    fill: false,\n    borderColor: COLORS[connection],\n    backgroundColor: COLORS[connection],\n  });\n\n  const createChartData = (data) => ({\n    labels: [],\n    datasets: selectedStations.map(connection => createDataset(connection, data[connection]))\n  });\n\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'minute',\n          stepSize: 1,\n        },\n        title: {\n          display: true,\n          text: 'Date of the measurement'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Detected value'\n        }\n      }\n    }\n  };\n\n  const stationOptions = Object.keys(CONNECTION_NAMES).map(station => ({\n    value: station,\n    label: CONNECTION_NAMES[station]\n  }));\n\n  return (\n    <div className=\"container mx-auto\">\n      <StationSelector\n        options={stationOptions}\n        selectedOptions={selectedStations}\n        onChange={handleStationChange}\n      />\n      <div className=\"grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-2\">\n        <div>\n          <Line data={createChartData(pm10Data)} options={{...chartOptions, plugins: { title: { display: true, text: 'PM10 Concentration' } }}} />\n        </div>\n        <div>\n          <Line data={createChartData(pm25Data)} options={{...chartOptions, plugins: { title: { display: true, text: 'PM2.5 Concentration' } }}} />\n        </div>\n        <div>\n          <Line data={createChartData(humidityData)} options={{...chartOptions, plugins: { title: { display: true, text: 'Humidity' } }}} />\n        </div>\n        <div>\n          <Line data={createChartData(windData)} options={{...chartOptions, plugins: { title: { display: true, text: 'Wind Speed' } }}} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,IAAI,MAAM,MAAM;AACvB,SAASC,IAAI,QAAQ,iBAAiB;AACtC,OAAO,eAAe;AACtB,OAAO,0BAA0B;AACjC,OAAOC,eAAe,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,MAAMC,MAAM,GAAG;EACbC,EAAE,EAAE,KAAK;EACTC,EAAE,EAAE,MAAM;EACVC,EAAE,EAAE,OAAO;EACXC,EAAE,EAAE,QAAQ;EACZC,EAAE,EAAE,QAAQ;EACZC,EAAE,EAAE;AACN,CAAC;AAED,MAAMC,gBAAgB,GAAG;EACvBN,EAAE,EAAE,kBAAkB;EACtBC,EAAE,EAAE,kBAAkB;EACtBC,EAAE,EAAE,qBAAqB;EACzBC,EAAE,EAAE,kBAAkB;EACtBC,EAAE,EAAE,aAAa;EACjBC,EAAE,EAAE;AACN,CAAC;AAED,MAAME,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACH,gBAAgB,CAAC,CAACI,MAAM,CAAC,CAACC,GAAG,EAAEC,GAAG,KAAK;EACtED,GAAG,CAACC,GAAG,CAAC,GAAGC,KAAK,CAAC,EAAE,CAAC,CAACC,IAAI,CAAC;IAAEC,CAAC,EAAE,IAAIC,IAAI,CAAC,CAAC,CAACC,OAAO,CAAC,CAAC;IAAEC,CAAC,EAAE;EAAE,CAAC,CAAC;EAC5D,OAAOP,GAAG;AACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AAEN,eAAe,SAASQ,KAAKA,CAAA,EAAG;EAAAC,EAAA;EAC9B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAG7B,QAAQ,CAACc,YAAY,CAAC;EACtD,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAACc,YAAY,CAAC;EACtD,MAAM,CAACkB,YAAY,EAAEC,eAAe,CAAC,GAAGjC,QAAQ,CAACc,YAAY,CAAC;EAC9D,MAAM,CAACoB,QAAQ,EAAEC,WAAW,CAAC,GAAGnC,QAAQ,CAACc,YAAY,CAAC;EACtD,MAAM,CAACsB,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAG5DD,SAAS,CAAC,MAAM;IAEd,MAAMuC,MAAM,GAAGrC,IAAI,CAACsC,OAAO,CAAC,yBAAyB,CAAC;IAEtDD,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,MAAM;MACzBC,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxCJ,MAAM,CAACK,SAAS,CAAC,WAAW,CAAC;MAC7BL,MAAM,CAACK,SAAS,CAAC,WAAW,CAAC;MAC7BL,MAAM,CAACK,SAAS,CAAC,eAAe,CAAC;MACjCL,MAAM,CAACK,SAAS,CAAC,WAAW,CAAC;IAC/B,CAAC,CAAC;IAEFL,MAAM,CAACE,EAAE,CAAC,SAAS,EAAE,CAACI,KAAK,EAAEC,OAAO,KAAK;MACvC,MAAMC,aAAa,GAAGC,IAAI,CAACC,KAAK,CAACH,OAAO,CAACI,QAAQ,CAAC,CAAC,CAAC;MACpD,MAAMC,SAAS,GAAGJ,aAAa,CAACI,SAAS,GAAG,IAAI,GAAGJ,aAAa,CAACI,SAAS,GAAG,IAAI,GAAGJ,aAAa,CAACI,SAAS;MAC3G,MAAMC,QAAQ,GAAG;QAAE7B,CAAC,EAAE4B,SAAS;QAAEzB,CAAC,EAAEqB,aAAa,CAACM;MAAM,CAAC;MACzD,MAAMC,UAAU,GAAGP,aAAa,CAACQ,OAAO;MAExC,IAAIzC,gBAAgB,CAACwC,UAAU,CAAC,EAAE;QAChC,QAAQT,KAAK;UACX,KAAK,WAAW;YACdW,UAAU,CAAC1B,WAAW,EAAEwB,UAAU,EAAEF,QAAQ,CAAC;YAC7C;UACF,KAAK,eAAe;YAClBI,UAAU,CAACtB,eAAe,EAAEoB,UAAU,EAAEF,QAAQ,CAAC;YACjD;UAEF;YACE;QACJ;MACF,CAAC,MAAM;QACLV,OAAO,CAACe,IAAI,CAAC,uBAAuBH,UAAU,EAAE,CAAC;MACnD;IACF,CAAC,CAAC;IAEF,OAAO,MAAM;MACXf,MAAM,CAACmB,GAAG,CAAC,CAAC;IACd,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMF,UAAU,GAAGA,CAACG,OAAO,EAAEL,UAAU,EAAEF,QAAQ,KAAK;IACpDO,OAAO,CAACC,QAAQ,IAAI;MAClB,MAAMC,qBAAqB,GAAG,CAAC,IAAID,QAAQ,CAACN,UAAU,CAAC,IAAI,EAAE,CAAC,EAAEF,QAAQ,CAAC,CAACU,KAAK,CAAC,CAAC,EAAE,CAAC;MACpF,OAAO;QAAE,GAAGF,QAAQ;QAAE,CAACN,UAAU,GAAGO;MAAsB,CAAC;IAC7D,CAAC,CAAC;EACJ,CAAC;EAGD,MAAME,mBAAmB,GAAIC,KAAK,IAAK;IACrC,MAAMX,KAAK,GAAGW,KAAK,CAACC,MAAM,CAACZ,KAAK;IAChC,IAAIW,KAAK,CAACC,MAAM,CAACC,OAAO,EAAE;MACxB5B,mBAAmB,CAAE6B,YAAY,IAAK,CAAC,GAAGA,YAAY,EAAEd,KAAK,CAAC,CAAC;IACjE,CAAC,MAAM;MACLf,mBAAmB,CAAE6B,YAAY,IAAKA,YAAY,CAACC,MAAM,CAAEb,OAAO,IAAKA,OAAO,KAAKF,KAAK,CAAC,CAAC;IAC5F;EACF,CAAC;EAED,MAAMgB,aAAa,GAAGA,CAACf,UAAU,EAAEgB,IAAI,MAAM;IAC3CC,KAAK,EAAEzD,gBAAgB,CAACwC,UAAU,CAAC;IACnCgB,IAAI;IACJhD,IAAI,EAAE,KAAK;IACXkD,WAAW,EAAEjE,MAAM,CAAC+C,UAAU,CAAC;IAC/BmB,eAAe,EAAElE,MAAM,CAAC+C,UAAU;EACpC,CAAC,CAAC;EAEF,MAAMoB,eAAe,GAAIJ,IAAI,KAAM;IACjCK,MAAM,EAAE,EAAE;IACVC,QAAQ,EAAEvC,gBAAgB,CAACwC,GAAG,CAACvB,UAAU,IAAIe,aAAa,CAACf,UAAU,EAAEgB,IAAI,CAAChB,UAAU,CAAC,CAAC;EAC1F,CAAC,CAAC;EAEF,MAAMwB,YAAY,GAAG;IACnBC,UAAU,EAAE,IAAI;IAChBC,MAAM,EAAE;MACNzD,CAAC,EAAE;QACD0D,IAAI,EAAE,MAAM;QACZC,IAAI,EAAE;UACJC,IAAI,EAAE,QAAQ;UACdC,QAAQ,EAAE;QACZ,CAAC;QACDC,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF,CAAC;MACD7D,CAAC,EAAE;QACD2D,KAAK,EAAE;UACLC,OAAO,EAAE,IAAI;UACbC,IAAI,EAAE;QACR;MACF;IACF;EACF,CAAC;EAED,MAAMC,cAAc,GAAGxE,MAAM,CAACC,IAAI,CAACH,gBAAgB,CAAC,CAAC+D,GAAG,CAACtB,OAAO,KAAK;IACnEF,KAAK,EAAEE,OAAO;IACdgB,KAAK,EAAEzD,gBAAgB,CAACyC,OAAO;EACjC,CAAC,CAAC,CAAC;EAEH,oBACEjD,OAAA;IAAKmF,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCpF,OAAA,CAACF,eAAe;MACduF,OAAO,EAAEH,cAAe;MACxBI,eAAe,EAAEvD,gBAAiB;MAClCwD,QAAQ,EAAE9B;IAAoB;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACF3F,OAAA;MAAKmF,SAAS,EAAC,sDAAsD;MAAAC,QAAA,gBACnEpF,OAAA;QAAAoF,QAAA,eACEpF,OAAA,CAACH,IAAI;UAACmE,IAAI,EAAEI,eAAe,CAAC7C,QAAQ,CAAE;UAAC8D,OAAO,EAAE;YAAC,GAAGb,YAAY;YAAEoB,OAAO,EAAE;cAAEb,KAAK,EAAE;gBAAEC,OAAO,EAAE,IAAI;gBAAEC,IAAI,EAAE;cAAqB;YAAE;UAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrI,CAAC,eACN3F,OAAA;QAAAoF,QAAA,eACEpF,OAAA,CAACH,IAAI;UAACmE,IAAI,EAAEI,eAAe,CAAC3C,QAAQ,CAAE;UAAC4D,OAAO,EAAE;YAAC,GAAGb,YAAY;YAAEoB,OAAO,EAAE;cAAEb,KAAK,EAAE;gBAAEC,OAAO,EAAE,IAAI;gBAAEC,IAAI,EAAE;cAAsB;YAAE;UAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtI,CAAC,eACN3F,OAAA;QAAAoF,QAAA,eACEpF,OAAA,CAACH,IAAI;UAACmE,IAAI,EAAEI,eAAe,CAACzC,YAAY,CAAE;UAAC0D,OAAO,EAAE;YAAC,GAAGb,YAAY;YAAEoB,OAAO,EAAE;cAAEb,KAAK,EAAE;gBAAEC,OAAO,EAAE,IAAI;gBAAEC,IAAI,EAAE;cAAW;YAAE;UAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/H,CAAC,eACN3F,OAAA;QAAAoF,QAAA,eACEpF,OAAA,CAACH,IAAI;UAACmE,IAAI,EAAEI,eAAe,CAACvC,QAAQ,CAAE;UAACwD,OAAO,EAAE;YAAC,GAAGb,YAAY;YAAEoB,OAAO,EAAE;cAAEb,KAAK,EAAE;gBAAEC,OAAO,EAAE,IAAI;gBAAEC,IAAI,EAAE;cAAa;YAAE;UAAC;QAAE;UAAAO,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7H,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACrE,EAAA,CAjIuBD,KAAK;AAAAwE,EAAA,GAALxE,KAAK;AAAA,IAAAwE,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}