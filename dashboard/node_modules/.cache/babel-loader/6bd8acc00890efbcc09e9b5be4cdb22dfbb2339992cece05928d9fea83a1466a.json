{"ast":null,"code":"var _jsxFileName = \"/home/manu/Master/SCF/Proyecto/dashboard/src/components/Stats.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport mqtt from 'mqtt';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\nimport axios from 'axios';\nimport StationSelector from './StationSelector';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst COLORS = {\n  infoA3A5: 'red',\n  infoA2A4: 'blue',\n  infoA2A3: 'green',\n  infoA1A2: 'orange',\n  infoA1A6: 'purple',\n  infoA3A6: 'brown',\n  infoA6A10: 'pink',\n  infoA6A7: 'yellow',\n  infoA9A10: 'cyan',\n  infoA7A9: 'magenta',\n  infoA8A9: 'lime',\n  infoA7A8: 'teal',\n  infoA5A7: 'olive',\n  infoA4A8: 'navy',\n  infoA4A5: 'gray'\n};\nconst CONNECTION_NAMES = {\n  infoA3A5: '(A3) Punta del Parque - (A5) Ensanche',\n  infoA2A4: '(A2) Corte Inglés - (A4) Perpetuo Socorro',\n  infoA2A3: '(A2) Corte Inglés - (A3) Punta del Parque',\n  infoA1A2: '(A1) Hospital General - (A2) Corte Inglés',\n  infoA1A6: '(A1) Hospital General - (A6) Fuente de las ranas',\n  infoA3A6: '(A3) Punta del Parque - (A6) Fuente de las ranas',\n  infoA6A10: '(A6) Fuente de las ranas - (A10) Piscina Juan de Toledo',\n  infoA6A7: '(A6) Fuente de las ranas - (A7) Paseo de la feria',\n  infoA9A10: '(A9) Recinto Ferial - (A10) Piscina Juan de Toledo',\n  infoA7A9: '(A7) Paseo de la feria - (A9) Recinto Ferial',\n  infoA8A9: '(A8) Parque Fiesta del Árbol - (A9) Recinto Ferial',\n  infoA7A8: '(A7) Paseo de la feria - (A8) Parque Fiesta del Árbol',\n  infoA5A7: '(A5) Ensanche - (A7) Paseo de la feria',\n  infoA4A8: '(A4) Perpetuo Socorro - (A8) Parque Fiesta del Árbol',\n  infoA4A5: '(A4) Perpetuo Socorro - (A5) Ensanche'\n};\nconst initialState = Object.keys(CONNECTION_NAMES).reduce((acc, key) => {\n  acc[key] = Array(10).fill({\n    x: new Date().getTime(),\n    y: 0\n  });\n  return acc;\n}, {});\nexport default function Stats() {\n  _s();\n  const [pm10Data, setPm10Data] = useState(initialState);\n  const [pm25Data, setPm25Data] = useState(initialState);\n  const [humidityData, setHumidityData] = useState(initialState);\n  const [windData, setWindData] = useState(initialState);\n  const [selectedStations, setSelectedStations] = useState([]);\n  const fetchData = async () => {\n    try {\n      const pm10Response = await axios.get('http://localhost:8000/get_data/pm10Data');\n      setPm10Data(pm10Response.data.data);\n      const pm25Response = await axios.get('http://localhost:8000/get_data/pm25Data');\n      setPm25Data(pm25Response.data.data);\n      const humidityResponse = await axios.get('http://localhost:8000/get_data/humidityData');\n      setHumidityData(humidityResponse.data.data);\n      const windResponse = await axios.get('http://localhost:8000/get_data/windData');\n      setWindData(windResponse.data.data);\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n    }\n  };\n  useEffect(() => {\n    fetchData();\n    const client = mqtt.connect('ws://54.78.231.141:9001');\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker.');\n      client.subscribe('pm10topic');\n      client.subscribe('pm25topic');\n      client.subscribe('humiditytopic');\n      client.subscribe('windtopic');\n    });\n    client.on('message', (topic, message) => {\n      const parsedMessage = JSON.parse(message.toString());\n      const timestamp = parsedMessage.timestamp < 1e12 ? parsedMessage.timestamp * 1000 : parsedMessage.timestamp;\n      const newPoint = {\n        x: timestamp,\n        y: parsedMessage.value\n      };\n      const connection = parsedMessage.station;\n      if (CONNECTION_NAMES[connection]) {\n        switch (topic) {\n          case 'pm10topic':\n            updateData(setPm10Data, connection, newPoint);\n            break;\n          case 'pm25topic':\n            updateData(setPm25Data, connection, newPoint);\n            break;\n          case 'humiditytopic':\n            updateData(setHumidityData, connection, newPoint);\n            break;\n          case 'windtopic':\n            updateData(setWindData, connection, newPoint);\n            break;\n          default:\n            break;\n        }\n      } else {\n        console.warn(`Unknown connection: ${connection}`);\n      }\n    });\n    return () => {\n      client.end();\n    };\n  }, []);\n  const updateData = (setData, connection, newPoint) => {\n    setData(prevData => {\n      const updatedConnectionData = [...(prevData[connection] || []), newPoint].slice(-10);\n      return {\n        ...prevData,\n        [connection]: updatedConnectionData\n      };\n    });\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const saveData = async () => {\n    try {\n      await axios.post('http://localhost:8000/save_data', {\n        type: 'pm10Data',\n        data: pm10Data\n      });\n      await axios.post('http://localhost:8000/save_data', {\n        type: 'pm25Data',\n        data: pm25Data\n      });\n      await axios.post('http://localhost:8000/save_data', {\n        type: 'humidityData',\n        data: humidityData\n      });\n      await axios.post('http://localhost:8000/save_data', {\n        type: 'windData',\n        data: windData\n      });\n    } catch (error) {\n      console.error(\"Error saving data\", error);\n    }\n  };\n  useEffect(() => {\n    window.addEventListener('beforeunload', saveData);\n    return () => {\n      window.removeEventListener('beforeunload', saveData);\n      saveData();\n    };\n  }, [pm10Data, pm25Data, humidityData, windData, saveData]);\n  const handleStationChange = event => {\n    const value = event.target.value;\n    if (event.target.checked) {\n      setSelectedStations(prevSelected => [...prevSelected, value]);\n    } else {\n      setSelectedStations(prevSelected => prevSelected.filter(station => station !== value));\n    }\n  };\n  const createDataset = (connection, data) => ({\n    label: CONNECTION_NAMES[connection],\n    data,\n    fill: false,\n    borderColor: COLORS[connection],\n    backgroundColor: COLORS[connection]\n  });\n  const createChartData = data => ({\n    labels: [],\n    datasets: selectedStations.map(connection => createDataset(connection, data[connection]))\n  });\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'minute',\n          stepSize: 1\n        },\n        title: {\n          display: true,\n          text: 'Date of the measurement'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Detected value'\n        }\n      }\n    }\n  };\n  const stationOptions = Object.keys(CONNECTION_NAMES).map(station => ({\n    value: station,\n    label: CONNECTION_NAMES[station]\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container mx-auto\",\n    children: [/*#__PURE__*/_jsxDEV(StationSelector, {\n      options: stationOptions,\n      selectedOptions: selectedStations,\n      onChange: handleStationChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChartData(pm10Data),\n          options: {\n            ...chartOptions,\n            plugins: {\n              title: {\n                display: true,\n                text: 'PM10 Concentration'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChartData(pm25Data),\n          options: {\n            ...chartOptions,\n            plugins: {\n              title: {\n                display: true,\n                text: 'PM2.5 Concentration'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChartData(humidityData),\n          options: {\n            ...chartOptions,\n            plugins: {\n              title: {\n                display: true,\n                text: 'Humidity'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Line, {\n          data: createChartData(windData),\n          options: {\n            ...chartOptions,\n            plugins: {\n              title: {\n                display: true,\n                text: 'Wind Speed'\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 199,\n    columnNumber: 5\n  }, this);\n}\n_s(Stats, \"bwJ8lDLLQN/6o95womArL7VmaF8=\");\n_c = Stats;\nvar _c;\n$RefreshReg$(_c, \"Stats\");","map":{"version":3,"names":["React","useEffect","useState","mqtt","Line","axios","StationSelector","jsxDEV","_jsxDEV","COLORS","infoA3A5","infoA2A4","infoA2A3","infoA1A2","infoA1A6","infoA3A6","infoA6A10","infoA6A7","infoA9A10","infoA7A9","infoA8A9","infoA7A8","infoA5A7","infoA4A8","infoA4A5","CONNECTION_NAMES","initialState","Object","keys","reduce","acc","key","Array","fill","x","Date","getTime","y","Stats","_s","pm10Data","setPm10Data","pm25Data","setPm25Data","humidityData","setHumidityData","windData","setWindData","selectedStations","setSelectedStations","fetchData","pm10Response","get","data","pm25Response","humidityResponse","windResponse","error","console","client","connect","on","log","subscribe","topic","message","parsedMessage","JSON","parse","toString","timestamp","newPoint","value","connection","station","updateData","warn","end","setData","prevData","updatedConnectionData","slice","saveData","post","type","window","addEventListener","removeEventListener","handleStationChange","event","target","checked","prevSelected","filter","createDataset","label","borderColor","backgroundColor","createChartData","labels","datasets","map","chartOptions","responsive","scales","time","unit","stepSize","title","display","text","stationOptions","className","children","options","selectedOptions","onChange","fileName","_jsxFileName","lineNumber","columnNumber","plugins","_c","$RefreshReg$"],"sources":["/home/manu/Master/SCF/Proyecto/dashboard/src/components/Stats.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport mqtt from 'mqtt';\nimport { Line } from 'react-chartjs-2';\nimport 'chart.js/auto';\nimport 'chartjs-adapter-date-fns';\nimport axios from 'axios';\nimport StationSelector from './StationSelector'; \n\nconst COLORS = {\n  infoA3A5: 'red',\n  infoA2A4: 'blue',\n  infoA2A3: 'green',\n  infoA1A2: 'orange',\n  infoA1A6: 'purple',\n  infoA3A6: 'brown',\n  infoA6A10: 'pink',\n  infoA6A7: 'yellow',\n  infoA9A10: 'cyan',\n  infoA7A9: 'magenta',\n  infoA8A9: 'lime',\n  infoA7A8: 'teal',\n  infoA5A7: 'olive',\n  infoA4A8: 'navy',\n  infoA4A5: 'gray',\n};\n\nconst CONNECTION_NAMES = {\n  infoA3A5: '(A3) Punta del Parque - (A5) Ensanche',\n  infoA2A4: '(A2) Corte Inglés - (A4) Perpetuo Socorro',\n  infoA2A3: '(A2) Corte Inglés - (A3) Punta del Parque',\n  infoA1A2: '(A1) Hospital General - (A2) Corte Inglés',\n  infoA1A6: '(A1) Hospital General - (A6) Fuente de las ranas',\n  infoA3A6: '(A3) Punta del Parque - (A6) Fuente de las ranas',\n  infoA6A10: '(A6) Fuente de las ranas - (A10) Piscina Juan de Toledo',\n  infoA6A7: '(A6) Fuente de las ranas - (A7) Paseo de la feria',\n  infoA9A10: '(A9) Recinto Ferial - (A10) Piscina Juan de Toledo',\n  infoA7A9: '(A7) Paseo de la feria - (A9) Recinto Ferial',\n  infoA8A9: '(A8) Parque Fiesta del Árbol - (A9) Recinto Ferial',\n  infoA7A8: '(A7) Paseo de la feria - (A8) Parque Fiesta del Árbol',\n  infoA5A7: '(A5) Ensanche - (A7) Paseo de la feria',\n  infoA4A8: '(A4) Perpetuo Socorro - (A8) Parque Fiesta del Árbol',\n  infoA4A5: '(A4) Perpetuo Socorro - (A5) Ensanche',\n};\n\nconst initialState = Object.keys(CONNECTION_NAMES).reduce((acc, key) => {\n  acc[key] = Array(10).fill({ x: new Date().getTime(), y: 0 });\n  return acc;\n}, {});\n\nexport default function Stats() {\n  const [pm10Data, setPm10Data] = useState(initialState);\n  const [pm25Data, setPm25Data] = useState(initialState);\n  const [humidityData, setHumidityData] = useState(initialState);\n  const [windData, setWindData] = useState(initialState);\n  const [selectedStations, setSelectedStations] = useState([]);\n\n  const fetchData = async () => {\n    try {\n      const pm10Response = await axios.get('http://localhost:8000/get_data/pm10Data');\n      setPm10Data(pm10Response.data.data);\n\n      const pm25Response = await axios.get('http://localhost:8000/get_data/pm25Data');\n      setPm25Data(pm25Response.data.data);\n\n      const humidityResponse = await axios.get('http://localhost:8000/get_data/humidityData');\n      setHumidityData(humidityResponse.data.data);\n\n      const windResponse = await axios.get('http://localhost:8000/get_data/windData');\n      setWindData(windResponse.data.data);\n    } catch (error) {\n      console.error(\"Error fetching data\", error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData();\n\n    const client = mqtt.connect('ws://54.78.231.141:9001');\n\n    client.on('connect', () => {\n      console.log('Connected to MQTT broker.');\n      client.subscribe('pm10topic');\n      client.subscribe('pm25topic');\n      client.subscribe('humiditytopic');\n      client.subscribe('windtopic');\n    });\n\n    client.on('message', (topic, message) => {\n      const parsedMessage = JSON.parse(message.toString());\n      const timestamp = parsedMessage.timestamp < 1e12 ? parsedMessage.timestamp * 1000 : parsedMessage.timestamp;\n      const newPoint = { x: timestamp, y: parsedMessage.value };\n      const connection = parsedMessage.station;\n\n      if (CONNECTION_NAMES[connection]) {\n        switch (topic) {\n          case 'pm10topic':\n            updateData(setPm10Data, connection, newPoint);\n            break;\n          case 'pm25topic':\n            updateData(setPm25Data, connection, newPoint);\n            break;\n          case 'humiditytopic':\n            updateData(setHumidityData, connection, newPoint);\n            break;\n          case 'windtopic':\n            updateData(setWindData, connection, newPoint);\n            break;\n          default:\n            break;\n        }\n      } else {\n        console.warn(`Unknown connection: ${connection}`);\n      }\n    });\n\n    return () => {\n      client.end();\n    };\n  }, []);\n\n  const updateData = (setData, connection, newPoint) => {\n    setData(prevData => {\n      const updatedConnectionData = [...(prevData[connection] || []), newPoint].slice(-10);\n      return { ...prevData, [connection]: updatedConnectionData };\n    });\n  };\n\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  const saveData = async () => {\n    try {\n      await axios.post('http://localhost:8000/save_data', { type: 'pm10Data', data: pm10Data });\n      await axios.post('http://localhost:8000/save_data', { type: 'pm25Data', data: pm25Data });\n      await axios.post('http://localhost:8000/save_data', { type: 'humidityData', data: humidityData });\n      await axios.post('http://localhost:8000/save_data', { type: 'windData', data: windData });\n    } catch (error) {\n      console.error(\"Error saving data\", error);\n    }\n  };\n\n  useEffect(() => {\n    window.addEventListener('beforeunload', saveData);\n    return () => {\n      window.removeEventListener('beforeunload', saveData);\n      saveData();\n    };\n  }, [pm10Data, pm25Data, humidityData, windData, saveData]);\n\n  const handleStationChange = (event) => {\n    const value = event.target.value;\n    if (event.target.checked) {\n      setSelectedStations((prevSelected) => [...prevSelected, value]);\n    } else {\n      setSelectedStations((prevSelected) => prevSelected.filter((station) => station !== value));\n    }\n  };\n\n  const createDataset = (connection, data) => ({\n    label: CONNECTION_NAMES[connection],\n    data,\n    fill: false,\n    borderColor: COLORS[connection],\n    backgroundColor: COLORS[connection],\n  });\n\n  const createChartData = (data) => ({\n    labels: [],\n    datasets: selectedStations.map(connection => createDataset(connection, data[connection]))\n  });\n\n  const chartOptions = {\n    responsive: true,\n    scales: {\n      x: {\n        type: 'time',\n        time: {\n          unit: 'minute',\n          stepSize: 1,\n        },\n        title: {\n          display: true,\n          text: 'Date of the measurement'\n        }\n      },\n      y: {\n        title: {\n          display: true,\n          text: 'Detected value'\n        }\n      }\n    }\n  };\n\n  const stationOptions = Object.keys(CONNECTION_NAMES).map(station => ({\n    value: station,\n    label: CONNECTION_NAMES[station]\n  }));\n\n  return (\n    <div className=\"container mx-auto\">\n      <StationSelector\n        options={stationOptions}\n        selectedOptions={selectedStations}\n        onChange={handleStationChange}\n      />\n      <div className=\"grid gap-4 grid-cols-1 md:grid-cols-2 lg:grid-cols-2\">\n        <div>\n          <Line data={createChartData(pm10Data)} options={{...chartOptions, plugins: { title: { display: true, text: 'PM10 Concentration' } }}} />\n        </div>\n        <div>\n          <Line data={createChartData(pm25Data)} options={{...chartOptions, plugins: { title: { display: true, text: 'PM2.5 Concentration' } }}} />\n        </div>\n        <div>\n          <Line data={createChartData(humidityData)} options={{...chartOptions, plugins: { title: { display: true, text: 'Humidity' } }}} />\n        </div>\n        <div>\n          <Line data={createChartData(windData)} options={{...chartOptions, plugins: { title: { display: true, text: 'Wind Speed' } }}} />\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}